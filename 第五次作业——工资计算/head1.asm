CODESEG SEGMENT
    ASSUME CS: CODESEG
    PUBLIC PRINT_NUM, PRINT_TAB, PRINT_NEWLINE
PRINT_NUM PROC
    PUSH CX
    PUSH BX
    PUSH SI
    PUSH DI
    MOV DI, 10
    MOV SI, 0
NUM_CONVERT_LOOP:
    MOV CX, 10
    CALL DIVDW
    PUSH CX
    INC SI
    CMP AX, 0
    JNZ NUM_CONVERT_LOOP
    CMP DX, 0
    JNZ NUM_CONVERT_LOOP
    MOV BX, DI
    SUB BX, SI
NUM_PRINT_DIGITS:
    POP DX
    ADD DL, '0'
    MOV AH, 02H
    INT 21H
    DEC SI
    JNZ NUM_PRINT_DIGITS
NUM_PRINT_SPACES:
    CMP BX, 0
    JLE NUM_DONE
    MOV DL, ' '
    MOV AH, 02H
    INT 21H
    DEC BX
    JMP NUM_PRINT_SPACES
NUM_DONE:
    POP DI
    POP SI
    POP BX
    POP CX
    RET
PRINT_NUM ENDP
DIVDW PROC
    PUSH BX
    PUSH AX
    MOV AX, DX
    MOV DX, 0
    DIV CX
    POP BX
    PUSH AX
    MOV AX, BX
    DIV CX
    MOV CX, DX
    POP DX
    POP BX
    RET
DIVDW ENDP
PRINT_TAB PROC FAR
    PUSH DX
    PUSH AX
    MOV DL, ' '
    MOV AH, 02H
    INT 21H
    INT 21H
    INT 21H
    INT 21H
    POP AX
    POP DX
    RET
PRINT_TAB ENDP
PRINT_NEWLINE PROC FAR
    PUSH DX
    PUSH AX
    MOV DL, 13
    MOV AH, 02H
    INT 21H
    MOV DL, 10
    MOV AH, 02H
    INT 21H
    POP AX
    POP DX
    RET
PRINT_NEWLINE ENDP
CODESEG ENDS
    END
